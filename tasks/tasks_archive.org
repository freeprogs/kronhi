#+STARTUP: content hideblocks
#+TODO: TASK(t!) | DONE(d) CANCEL(c)
#+TODO: BUG(b!) | FIXED(f) REJECT(r)

* Архив задач

** DONE Сделать настройку и запись пустой директории
   CLOSED: [2017-05-09 Вт 10:37]
   :PROPERTIES:
   :issue_id: 1
   :issue_type: task
   :ARCHIVE_TIME: 2017-05-09 Вт 10:39
   :ARCHIVE_FILE: ~/prog/projects/c/kronhi/tasks/tasks.org
   :ARCHIVE_OLPATH: Задачи
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:


* Архив багов

** FIXED Увеличить offset для перемещения по большим файлам
   CLOSED: [2017-05-11 Чт 20:38]
   :PROPERTIES:
   :issue_id: 2
   :issue_type: bug
   :ARCHIVE_TIME: 2017-05-11 Чт 20:40
   :ARCHIVE_FILE: ~/prog/projects/c/kronhi/tasks/tasks.org
   :ARCHIVE_OLPATH: Баги
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: FIXED
   :END:

   [2017-05-09 Вт]

   На данный момент для offset'а используется size_t, что ограничивает
   его размером 4Gb.
   Нужно использовать либо тип double либо тип с длинной арифметикой с
   набором методов. Так как тип double не являяется нативным типом для
   этого, лучше использовать тип с длинной арифметикой.
   Так же тип с длинной арифметикой нужно соединить с вводом/выводом в
   оболочке.

   [2017-05-11 Чт]

   Построил абстрактное большое число и реализовал его через
   double. Теперь по offset'у редактируется файл около 9000Tb, хотя
   поведение fopen() на таком большом файле неизвестно. Настоящая
   длинная арифметика вызвала проблемы с преобразованием из строки
   (слишком сложно всё, нужны юнит-тесты).

   Теперь требуется опитимизация посимвольной промотки offset'а при
   записи, так как промотка offset'а занимает много времени (секунды
   на мегабайты и минуты на гигабайты).


* Архив окружения
