#+STARTUP: content logdone hideblocks
#+TODO: TASK(t!) | DONE(d) CANCEL(c)
#+TODO: BUG(b!) | FIXED(f) REJECT(r)
#+PRIORITIES: A F C
#+TAGS: current(c) testing(t)
#+CONSTANTS: last_issue_id=4

* Задачи
  :PROPERTIES:
  :COLUMNS:  %3issue_id(ID) %4issue_type(TYPE) %TODO %40ITEM %SCHEDULED %DEADLINE %1PRIORITY
  :ARCHIVE:  tasks_archive.org::* Архив задач
  :END:


* Баги
  :PROPERTIES:
  :COLUMNS:  %3issue_id(ID) %4issue_type(TYPE) %TODO %40ITEM %SCHEDULED %DEADLINE %1PRIORITY
  :ARCHIVE:  tasks_archive.org::* Архив багов
  :END:

** BUG Увеличить offset для перемещения по большим файлам
   :PROPERTIES:
   :issue_id: 2
   :issue_type: bug
   :END:

   [2017-05-09 Вт]

   На данный момент для offset'а используется size_t, что ограничивает
   его размером 4Gb.
   Нужно использовать либо тип double либо тип с длинной арифметикой с
   набором методов. Так как тип double не являяется нативным типом для
   этого, лучше использовать тип с длинной арифметикой.
   Так же тип с длинной арифметикой нужно соединить с вводом/выводом в
   оболочке.


* Окружение
  :PROPERTIES:
  :COLUMNS:  %3issue_id(ID) %4issue_type(TYPE) %TODO %40ITEM %SCHEDULED %DEADLINE %1PRIORITY
  :ARCHIVE:  tasks_archive.org::* Архив окружения
  :END:

** TASK Добавить в Makefile отладочную команду
   :PROPERTIES:
   :issue_id: 3
   :issue_type: task
   :END:

   [2017-05-09 Вт]

   Так как часто надо посмотреть внутренности при выполнении
   программы, нужно сделать команду (или набор команд) для отладочной
   компиляции и отладочного запуска. В результате должна стать
   доступна удобная отладка из gdb.

** TASK Добавить в Makefile тестировочную команду
   :PROPERTIES:
   :issue_id: 4
   :issue_type: task
   :END:

   [2017-05-09 Вт]

   Иногда надо по-быстрому обложить что-то тестами, когда точно не
   знаешь, как оно работает. Поэтому нужна инфраструктура, в которую
   можно быстро добавлять тесты и которые потом можно быстро
   скомпилировать и быстро запустить.
