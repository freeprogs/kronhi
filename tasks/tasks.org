#+STARTUP: content logdone hideblocks
#+TODO: TASK(t!) | DONE(d) CANCEL(c)
#+TODO: BUG(b!) | FIXED(f) REJECT(r)
#+PRIORITIES: A F C
#+TAGS: current(c) testing(t)
#+CONSTANTS: last_issue_id=14

* Задачи
  :PROPERTIES:
  :COLUMNS:  %3issue_id(ID) %4issue_type(TYPE) %TODO %40ITEM %SCHEDULED %DEADLINE %1PRIORITY
  :ARCHIVE:  tasks_archive.org::* Архив задач
  :END:

** TASK Добавить использование бинарников в описании директории
   :PROPERTIES:
   :issue_id: 5
   :issue_type: task
   :END:

   [2017-05-09 Вт]

   Нужно иметь возможность вставить любые данные в пределах допустимой
   длины описания директории. Это может быть бинарный файл, нули из
   нулевого устройства или просто рандомные байты.

** TASK Сделать xor-шифрование заголовков директорий и файлов
   :PROPERTIES:
   :issue_id: 6
   :issue_type: task
   :END:

   [2017-05-09 Вт]

   Шифроваться должен заголовок и содержимое слитно. Для чтения только
   заголовка, нужно запоминать, на каком байте пароля
   остановился. Если потом нужно расшифровать содержимое, нужно
   продолжать с этого байта, на котором остановился.

** TASK Сделать чтение каталога с файлами и вывод информации
   :PROPERTIES:
   :issue_id: 8
   :issue_type: task
   :END:

   [2017-05-09 Вт]

   При чтении каталога, нужно иметь возможность прочитать содержимое
   каталога в виде имён файлов и их размеров. Нужно иметь возможность
   проверить целостность записанных файлов по контрольным суммам без
   извлечения самих файлов.

** TASK Оптимизировать посимвольную промотку offset'а
   :PROPERTIES:
   :issue_id: 10
   :issue_type: task
   :END:

   [2017-05-11 Чт]

   Так как промотка offset'а выполняется посимвольно, на мегабайтных
   файлах это занимает несколько секунд (что заметно), а на
   гигабайтных файлах это занимает минуты (что надоедает).

   Надо либо сделать блочную промотку, либо использовать как-то
   fseek().

   [2017-07-05 Ср]

   Надо записать файл на 100Mb и засечь время. После этого вычислить
   время для 1Gb. Если время для 1Gb слишком большое, надо
   оптимизировать запись, иначе задание выполнено.

** TASK Оптимизировать двойную проверку доступного места для записи
   :PROPERTIES:
   :issue_id: 11
   :issue_type: task
   :END:

   [2017-05-12 Пт]

   Сейчас сначала проверяется доступное место для записи после
   offset'а, потом при выполнении записи повторяются те же действия,
   тем самым удваивая время при записи. Отдельная проверка доступного
   места для записи нужна, но её нужно сделать отдельной командой,
   которую можно не вызывать при уверенности в доступном месте. При
   этом при самой записи так же должна выполняться проверка и
   возвращаться код, если не хватило места. Возможно, эти две команды
   нужно объединить в одну, но нужно помнить, что может потребоваться
   только выяснить, хватает ли места для записи, не выполняя саму
   запись. По этой причине команды и разделены изначально.

** TASK Сделать возможность частичного ввода описания директории
   :PROPERTIES:
   :issue_id: 13
   :issue_type: task
   :END:

   [2017-06-29 Чт]

   Сейчас чтобы исправить одно поле в описании директории, нужно
   повторно вводить все остальные поля. Нужно сделать так, чтобы для
   исправления одного поля остальные поля можно было просто
   пропустить.


** TASK Сделать возможность частичного ввода описания файла
   :PROPERTIES:
   :issue_id: 14
   :issue_type: task
   :END:

   [2017-06-29 Чт]

   Сейчас чтобы исправить одно поле в описании файла, нужно повторно
   вводить все остальные поля. Нужно сделать так, чтобы для
   исправления одного поля остальные поля можно было просто
   пропустить.


* Баги
  :PROPERTIES:
  :COLUMNS:  %3issue_id(ID) %4issue_type(TYPE) %TODO %40ITEM %SCHEDULED %DEADLINE %1PRIORITY
  :ARCHIVE:  tasks_archive.org::* Архив багов
  :END:


* Окружение
  :PROPERTIES:
  :COLUMNS:  %3issue_id(ID) %4issue_type(TYPE) %TODO %40ITEM %SCHEDULED %DEADLINE %1PRIORITY
  :ARCHIVE:  tasks_archive.org::* Архив окружения
  :END:
